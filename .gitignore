# Digital Workshop - Comprehensive .gitignore
# Generated by Security Audit - Critical for repository protection

# =============================================================================
# PYTHON SPECIFIC
# =============================================================================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# =============================================================================
# DATABASE FILES - CRITICAL SECURITY
# =============================================================================
# SQLite databases
*.db
*.sqlite
*.sqlite3

# Other database formats
*.mdb
*.accdb
*.odb

# Database backup files
*.db.bak
*.sqlite.bak
*.backup

# =============================================================================
# LOG FILES - SECURITY SENSITIVE
# =============================================================================
logs/
*.log
*.logs
log_*.txt
debug.log
error.log
access.log
application.log
system.log

# =============================================================================
# CACHE FILES - USER DATA PROTECTION
# =============================================================================
.cache/
*.cache
.cache_*
__pycache__/
.pytest_cache/
.coverage_cache/
.mypy_cache/
.tox_cache/

# Browser cache
.cache/
browser_cache/

# Application cache
app_cache/
temp_cache/

# =============================================================================
# TEMPORARY FILES - SECURITY RISK
# =============================================================================
tmp/
temp/
*.tmp
*.temp
*.bak
*.backup
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# =============================================================================
# IDE AND EDITOR FILES
# =============================================================================
# VS Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Visual Studio Code
.history/*

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.vim
.netrwhist
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Atom
.atom/

# =============================================================================
# OPERATING SYSTEM FILES
# =============================================================================
# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon?
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# =============================================================================
# BUILD AND COMPILED FILES
# =============================================================================
build/
dist/
*.egg-info/
.eggs/
*.whl
*.pyz

# Compiled source
*.o
*.so
*.dll
*.dylib
*.exe

# =============================================================================
# TEST AND COVERAGE ARTIFACTS
# =============================================================================
test_results/
test_artifacts/
coverage/
.coverage
htmlcov/
.pytest_cache/
.tox/
.nox/

# Performance test results
benchmark_results/
perf_results/

# =============================================================================
# SECURITY SENSITIVE FILES
# =============================================================================
# API keys and tokens (if accidentally created)
api_keys.txt
tokens.txt
secrets.txt
credentials.txt
auth_*.txt

# SSL certificates
*.pem
*.key
*.crt
*.cert
*.p12
*.pfx

# Configuration files with real values
config_real.json
settings_real.json
production.json

# =============================================================================
# DEVELOPMENT TOOLS
# =============================================================================
# Node.js (if used)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Webpack
.webpack/

# =============================================================================
# PROJECT SPECIFIC
# =============================================================================
# 3D model files (large files that shouldn't be in git)
*.stl
*.obj
*.ply
*.3mf
*.step
*.iges
*.igs

# User data and preferences
user_data/
preferences/
settings/

# Import/export directories
imports/
exports/
uploads/
downloads/

# Backup directories
backups/
archive/
old/

# =============================================================================
# CI/CD AND DEPLOYMENT
# =============================================================================
# Deployment artifacts
deploy/
deployment/
*.deploy

# CI/CD specific
.github/workflows/*.yml.bak
.gitlab-ci.yml.bak

# =============================================================================
# DOCUMENTATION BUILD
# =============================================================================
docs/_build/
docs/build/
site/

# =============================================================================
# SECURITY AUDIT FINDINGS
# =============================================================================
# Files that should never be committed based on audit findings
SECURITY_AUDIT_REMOVED/
audit_findings/
security_scan_results/

# =============================================================================
# END OF .gitignore
# =============================================================================