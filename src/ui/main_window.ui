<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1600</width>
    <height>1000</height>
   </rect>
  </property>
  <property name="minimumSize">
   <size>
    <width>1200</width>
    <height>800</height>
   </size>
  </property>
  <property name="windowTitle">
   <string>3D-MM - 3D Model Manager</string>
  </property>
  <property name="dockOptions">
   <set>QMainWindow::AllowNestedDocks|QMainWindow::AllowTabbedDocks|QMainWindow::AnimatedDocks</set>
  </property>
  <property name="styleSheet">
   <string notr="true">QMainWindow {
    background-color: #ffffff;
    color: #000000;
}
QDockWidget {
    background-color: #ffffff;
    color: #000000;
    border: 1px solid #d0d0d0;
    font-weight: bold;
}
QDockWidget::title {
    background-color: #f5f5f5;
    padding: 5px;
    border-bottom: 1px solid #d0d0d0;
}
QToolBar {
    background-color: #f5f5f5;
    border: 1px solid #d0d0d0;
    spacing: 3px;
    color: #000000;
}
QMenuBar {
    background-color: #f5f5f5;
    color: #000000;
    border-bottom: 1px solid #d0d0d0;
}
QMenuBar::item {
    background-color: transparent;
    padding: 4px 8px;
}
QMenuBar::item:selected {
    background-color: #0078d4;
    color: #ffffff;
}
QStatusBar {
    background-color: #f5f5f5;
    color: #000000;
    border-top: 1px solid #d0d0d0;
}
QLabel {
    color: #000000;
}
QPushButton {
    background-color: #f5f5f5;
    color: #000000;
    border: 1px solid #d0d0d0;
    padding: 4px 12px;
    border-radius: 2px;
}
QPushButton:hover {
    background-color: #e1e1e1;
}
QPushButton:pressed {
    background-color: #d0d0d0;
}</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <layout class="QVBoxLayout" name="verticalLayout">
    <property name="spacing">
     <number>0</number>
    </property>
    <property name="leftMargin">
     <number>0</number>
    </property>
    <property name="topMargin">
     <number>0</number>
    </property>
    <property name="rightMargin">
     <number>0</number>
    </property>
    <property name="bottomMargin">
     <number>0</number>
    </property>
    <item>
     <widget class="QTextEdit" name="viewer_widget">
      <property name="readOnly">
       <bool>true</bool>
      </property>
      <property name="plainText">
       <string>3D Model Viewer

This area will display the 3D model viewer component.
The viewer will be loaded dynamically at runtime.

Features will include:
- Interactive 3D model rendering
- Multiple view modes (wireframe, solid, textured)
- Camera controls (orbit, pan, zoom)
- Lighting controls
- Measurement tools
- Animation playback
- Screenshot capture</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignCenter</set>
      </property>
     </widget>
    </item>
   </layout>
  </widget>
  <widget class="QMenuBar" name="menubar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>1600</width>
     <height>22</height>
    </rect>
   </property>
   <widget class="QMenu" name="menuFile">
    <property name="title">
     <string>&amp;File</string>
    </property>
    <addaction name="actionOpen"/>
    <addaction name="separator"/>
    <addaction name="actionExit"/>
   </widget>
   <widget class="QMenu" name="menuEdit">
    <property name="title">
     <string>&amp;Edit</string>
    </property>
    <addaction name="actionPreferences"/>
   </widget>
   <widget class="QMenu" name="menuView">
    <property name="title">
     <string>&amp;View</string>
    </property>
    <addaction name="actionZoomIn"/>
    <addaction name="actionZoomOut"/>
    <addaction name="separator"/>
    <addaction name="actionResetView"/>
   </widget>
   <widget class="QMenu" name="menuHelp">
    <property name="title">
     <string>&amp;Help</string>
    </property>
    <addaction name="actionAbout"/>
   </widget>
   <addaction name="menuFile"/>
   <addaction name="menuEdit"/>
   <addaction name="menuView"/>
   <addaction name="menuHelp"/>
  </widget>
  <widget class="QToolBar" name="MainToolBar">
   <property name="windowTitle">
    <string>Main</string>
   </property>
   <property name="objectName">
    <string>MainToolBar</string>
   </property>
   <attribute name="toolBarArea">
    <enum>TopToolBarArea</enum>
   </attribute>
   <attribute name="toolBarBreak">
    <bool>false</bool>
   </attribute>
   <addaction name="actionOpen"/>
   <addaction name="separator"/>
   <addaction name="actionZoomIn"/>
   <addaction name="actionZoomOut"/>
   <addaction name="actionResetView"/>
  </widget>
  <widget class="QStatusBar" name="status_bar">
   <property name="objectName">
    <string>status_bar</string>
   </property>
   <widget class="QLabel" name="status_label">
    <property name="text">
     <string>Ready</string>
    </property>
   </widget>
   <widget class="QProgressBar" name="progress_bar">
    <property name="visible">
     <bool>false</bool>
    </property>
   </widget>
   <widget class="QLabel" name="memory_label">
    <property name="text">
     <string>Memory: N/A</string>
    </property>
   </widget>
  </widget>
  <widget class="QDockWidget" name="model_library_dock">
   <property name="objectName">
    <string>ModelLibraryDock</string>
   </property>
   <property name="windowTitle">
    <string>Model Library</string>
   </property>
   <property name="allowedAreas">
    <set>Qt::LeftDockWidgetArea|Qt::RightDockWidgetArea</set>
   </property>
   <attribute name="dockWidgetArea">
    <number>1</number>
   </attribute>
   <widget class="QTextEdit" name="model_library_widget">
    <property name="readOnly">
     <bool>true</bool>
    </property>
    <property name="plainText">
     <string>Model Library

This area will display the model library component.
The library widget will be loaded dynamically at runtime.

Features will include:
- Model list with thumbnails
- Category filtering
- Search functionality
- Import/export options</string>
    </property>
   </widget>
  </widget>
  <widget class="QDockWidget" name="properties_dock">
   <property name="objectName">
    <string>PropertiesDock</string>
   </property>
   <property name="windowTitle">
    <string>Model Properties</string>
   </property>
   <property name="allowedAreas">
    <set>Qt::LeftDockWidgetArea|Qt::RightDockWidgetArea</set>
   </property>
   <attribute name="dockWidgetArea">
    <number>2</number>
   </attribute>
   <widget class="QTextEdit" name="properties_widget">
    <property name="readOnly">
     <bool>true</bool>
    </property>
    <property name="plainText">
     <string>Model Properties

This panel will display properties and metadata
for the selected 3D model.

Features will include:
- Model information
- Metadata editing
- Tag management
- Export settings</string>
    </property>
   </widget>
  </widget>
  <widget class="QDockWidget" name="metadata_dock">
   <property name="objectName">
    <string>MetadataDock</string>
   </property>
   <property name="windowTitle">
    <string>Metadata Editor</string>
   </property>
   <property name="allowedAreas">
    <set>Qt::BottomDockWidgetArea|Qt::TopDockWidgetArea</set>
   </property>
   <attribute name="dockWidgetArea">
    <number>8</number>
   </attribute>
   <widget class="QTextEdit" name="metadata_widget">
    <property name="readOnly">
     <bool>true</bool>
    </property>
    <property name="plainText">
     <string>Metadata Editor

This area will display the metadata editor component.
The editor widget will be loaded dynamically at runtime.

Features will include:
- Title and description editing
- Category assignment
- Keyword tagging
- Custom properties</string>
    </property>
   </widget>
  </widget>
  <action name="actionOpen">
   <property name="text">
    <string>&amp;Open Model...</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+O</string>
   </property>
   <property name="statusTip">
    <string>Open a 3D model file</string>
   </property>
  </action>
  <action name="actionExit">
   <property name="text">
    <string>E&amp;xit</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+Q</string>
   </property>
   <property name="statusTip">
    <string>Exit the application</string>
   </property>
  </action>
  <action name="actionPreferences">
   <property name="text">
    <string>&amp;Preferences...</string>
   </property>
   <property name="statusTip">
    <string>Open application preferences</string>
   </property>
  </action>
  <action name="actionZoomIn">
   <property name="text">
    <string>Zoom &amp;In</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+=</string>
   </property>
   <property name="statusTip">
    <string>Zoom in on the 3D view</string>
   </property>
  </action>
  <action name="actionZoomOut">
   <property name="text">
    <string>Zoom &amp;Out</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+-</string>
   </property>
   <property name="statusTip">
    <string>Zoom out from the 3D view</string>
   </property>
  </action>
  <action name="actionResetView">
   <property name="text">
    <string>&amp;Reset View</string>
   </property>
   <property name="statusTip">
    <string>Reset the 3D view to default</string>
   </property>
  </action>
  <action name="actionAbout">
   <property name="text">
    <string>&amp;About 3D-MM</string>
   </property>
   <property name="statusTip">
    <string>Show information about 3D-MM</string>
   </property>
  </action>
 </widget>
 <resources/>
 <connections/>
</ui>