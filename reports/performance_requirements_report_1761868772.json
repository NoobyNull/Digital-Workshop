{
  "timestamp": "2025-10-30 16:59:32",
  "system_info": {
    "cpu_count": 24,
    "memory_total_gb": 127.7203598022461,
    "memory_available_gb": 90.5206527709961,
    "platform": "win32",
    "python_version": "3.12.10 (tags/v3.12.10:0cc8128, Apr  8 2025, 12:21:36) [MSC v.1943 64 bit (AMD64)]"
  },
  "test_results": [
    {
      "test_name": "Small STL (<100MB)",
      "target_value": 5.0,
      "actual_value": 0.015225410461425781,
      "passed": true,
      "execution_time": 0.015225410461425781,
      "memory_usage_mb": 50.0078125,
      "details": {
        "start_memory_mb": 47.6328125,
        "end_memory_mb": 97.640625,
        "memory_delta_mb": 50.0078125
      }
    },
    {
      "test_name": "Medium STL (100-500MB)",
      "target_value": 15.0,
      "actual_value": 0.0591583251953125,
      "passed": true,
      "execution_time": 0.0591583251953125,
      "memory_usage_mb": 150.0,
      "details": {
        "start_memory_mb": 97.6484375,
        "end_memory_mb": 247.6484375,
        "memory_delta_mb": 150.0
      }
    },
    {
      "test_name": "Large STL (>500MB)",
      "target_value": 30.0,
      "actual_value": 0.17220854759216309,
      "passed": true,
      "execution_time": 0.17220854759216309,
      "memory_usage_mb": 400.0,
      "details": {
        "start_memory_mb": 247.6484375,
        "end_memory_mb": 647.6484375,
        "memory_delta_mb": 400.0
      }
    },
    {
      "test_name": "Small OBJ (<100MB)",
      "target_value": 5.0,
      "actual_value": 0.04559135437011719,
      "passed": true,
      "execution_time": 0.04559135437011719,
      "memory_usage_mb": -549.99609375,
      "details": {
        "start_memory_mb": 647.6484375,
        "end_memory_mb": 97.65234375,
        "memory_delta_mb": -549.99609375
      }
    },
    {
      "test_name": "Medium OBJ (100-500MB)",
      "target_value": 15.0,
      "actual_value": 0.08899092674255371,
      "passed": true,
      "execution_time": 0.08899092674255371,
      "memory_usage_mb": 150.0,
      "details": {
        "start_memory_mb": 97.65234375,
        "end_memory_mb": 247.65234375,
        "memory_delta_mb": 150.0
      }
    },
    {
      "test_name": "Small STEP (<100MB)",
      "target_value": 5.0,
      "actual_value": 0.020870208740234375,
      "passed": true,
      "execution_time": 0.020870208740234375,
      "memory_usage_mb": -150.0,
      "details": {
        "start_memory_mb": 247.65234375,
        "end_memory_mb": 97.65234375,
        "memory_delta_mb": -150.0
      }
    },
    {
      "test_name": "Memory Stability (20 iterations)",
      "target_value": 10.0,
      "actual_value": 0.0,
      "passed": true,
      "execution_time": 0.0,
      "memory_usage_mb": 0.0,
      "details": {
        "initial_memory_mb": 47.6484375,
        "final_memory_mb": 57.65234375,
        "memory_samples": [
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375
        ],
        "iterations_completed": 20
      }
    },
    {
      "test_name": "Memory Leak Detection (50 iterations)",
      "target_value": 0.1,
      "actual_value": 7.8125e-05,
      "passed": true,
      "execution_time": 0.0,
      "memory_usage_mb": 0.00390625,
      "details": {
        "initial_memory_mb": 47.6484375,
        "final_memory_mb": 57.65625,
        "memory_trend_mb_per_iteration": 7.8125e-05,
        "iterations_completed": 50,
        "memory_samples": [
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65234375,
          57.65625,
          57.65625,
          57.65625,
          57.65625,
          57.65625,
          57.65625,
          57.65625,
          57.65625,
          57.65625,
          57.65625,
          57.65625,
          57.65625,
          57.65625,
          57.65625,
          57.65625
        ]
      }
    },
    {
      "test_name": "UI Responsiveness",
      "target_value": 1.0,
      "actual_value": 2.0219297409057617,
      "passed": false,
      "execution_time": 2.0219297409057617,
      "memory_usage_mb": 0.07421875,
      "details": {
        "start_memory_mb": 47.65234375,
        "end_memory_mb": 47.7265625,
        "memory_delta_mb": 0.07421875
      }
    },
    {
      "test_name": "UI Responsiveness",
      "target_value": 1.0,
      "actual_value": 2.0219297409057617,
      "passed": false,
      "execution_time": 2.0219297409057617,
      "memory_usage_mb": 0.0,
      "details": {
        "ui_responsive": true
      }
    },
    {
      "test_name": "3D Rendering Performance",
      "target_value": 30.0,
      "actual_value": 58.0,
      "passed": true,
      "execution_time": 1.0,
      "memory_usage_mb": 0.0,
      "details": {
        "frames_rendered": 58,
        "actual_fps": 58.0,
        "target_fps": 30.0
      }
    },
    {
      "test_name": "3D Rendering (60 FPS target)",
      "target_value": 2.0,
      "actual_value": 1.004216194152832,
      "passed": true,
      "execution_time": 1.004216194152832,
      "memory_usage_mb": 0.0,
      "details": {
        "start_memory_mb": 47.7265625,
        "end_memory_mb": 47.7265625,
        "memory_delta_mb": 0.0
      }
    },
    {
      "test_name": "Bulk Insert (1000 models)",
      "target_value": 5.0,
      "actual_value": 1.2176334857940674,
      "passed": true,
      "execution_time": 1.2176334857940674,
      "memory_usage_mb": 6.796875,
      "details": {
        "start_memory_mb": 48.48828125,
        "end_memory_mb": 55.28515625,
        "memory_delta_mb": 6.796875
      }
    },
    {
      "test_name": "Search Operations (100 queries)",
      "target_value": 1.0,
      "actual_value": 0.10018157958984375,
      "passed": true,
      "execution_time": 0.10018157958984375,
      "memory_usage_mb": 0.37890625,
      "details": {
        "start_memory_mb": 55.28515625,
        "end_memory_mb": 55.6640625,
        "memory_delta_mb": 0.37890625
      }
    },
    {
      "test_name": "Metadata Operations (500 updates)",
      "target_value": 2.0,
      "actual_value": 0.673438310623169,
      "passed": true,
      "execution_time": 0.673438310623169,
      "memory_usage_mb": 0.79296875,
      "details": {
        "start_memory_mb": 55.6640625,
        "end_memory_mb": 56.45703125,
        "memory_delta_mb": 0.79296875
      }
    }
  ],
  "summary": {
    "total_tests": 15,
    "passed_tests": 13,
    "failed_tests": 2,
    "success_rate": 0.8666666666666667,
    "average_execution_time": 0.5627582550048829,
    "total_memory_usage_mb": 58.05859375
  },
  "recommendations": [
    "Review failed performance tests and optimize accordingly",
    "Consider optimizing operations that are close to performance targets",
    "Review memory usage patterns and implement better memory management"
  ]
}