{
  "execution_summary": {
    "total_tools": 4,
    "successful_tools": 0,
    "failed_tools": 4,
    "total_execution_time": 61.3872492313385,
    "timestamp": "2025-10-31T13:32:06.248291"
  },
  "tool_results": [
    {
      "tool_name": "code_quality_validator",
      "execution_time": 60.06280493736267,
      "exit_code": -1,
      "success": false,
      "output_path": "",
      "metrics": {},
      "violations_count": 1,
      "recommendations": [
        "Increase timeout or optimize tool execution"
      ]
    },
    {
      "tool_name": "monolithic_detector",
      "execution_time": 1.008833885192871,
      "exit_code": 1,
      "success": false,
      "output_path": "reports/monolithic_report.json",
      "metrics": {
        "total_files_analyzed": 321,
        "monolithic_files_found": 10,
        "compliance_percentage": 100.0,
        "average_lines_of_code": 0,
        "max_lines_of_code": 0
      },
      "violations_count": 0,
      "recommendations": []
    },
    {
      "tool_name": "naming_validator",
      "execution_time": 0.1211085319519043,
      "exit_code": 1,
      "success": false,
      "output_path": "reports/naming_report.json",
      "metrics": {
        "total_files_validated": 0,
        "violations_found": 0,
        "compliance_percentage": 100.0,
        "adjective_violations": 0,
        "convention_violations": 0
      },
      "violations_count": 0,
      "recommendations": [
        "Found 40 files with descriptive adjectives.",
        "Compliance rate could be improved. Review flagged files.",
        "Focus on removing the most common descriptive adjectives first."
      ]
    },
    {
      "tool_name": "unified_test_runner",
      "execution_time": 0.1945018768310547,
      "exit_code": 4,
      "success": false,
      "output_path": "reports/test_report.json",
      "metrics": {
        "total_tests": 0,
        "passed_tests": 0,
        "failed_tests": 0,
        "skipped_tests": 0,
        "success_rate": 0,
        "execution_time": 0.0
      },
      "violations_count": 0,
      "recommendations": [
        "All tests passed! Excellent work maintaining code quality."
      ]
    }
  ],
  "quality_gate_results": [
    {
      "gate_name": "monolithic_modules",
      "passed": false,
      "actual_value": 10,
      "threshold": 0,
      "severity": "critical",
      "violations_count": 0,
      "recommendations": [
        "Refactor large modules into smaller, more focused components",
        "Consider applying the Single Responsibility Principle",
        "Use dependency injection to reduce coupling"
      ]
    },
    {
      "gate_name": "naming_conventions",
      "passed": true,
      "actual_value": 100.0,
      "threshold": 95.0,
      "severity": "major",
      "violations_count": 0,
      "recommendations": [
        "Excellent! naming_conventions quality gate passed with 100.00"
      ]
    },
    {
      "gate_name": "test_execution",
      "passed": false,
      "actual_value": 0,
      "threshold": 95.0,
      "severity": "critical",
      "violations_count": 0,
      "recommendations": [
        "Fix failing tests to improve test success rate",
        "Add missing test cases for uncovered functionality",
        "Review and update flaky or unreliable tests"
      ]
    },
    {
      "gate_name": "code_quality",
      "passed": false,
      "actual_value": 0.0,
      "threshold": 95.56,
      "severity": "critical",
      "violations_count": 1,
      "recommendations": [
        "Improve code formatting and linting compliance",
        "Address critical and major code quality issues",
        "Consider using automated code formatting tools"
      ]
    }
  ],
  "recommendations": [
    "Compliance rate could be improved. Review flagged files.",
    "Refactor large modules into smaller, more focused components",
    "Improve code formatting and linting compliance",
    "Address critical and major code quality issues",
    "All tests passed! Excellent work maintaining code quality.",
    "Review and update flaky or unreliable tests",
    "Fix failing tests to improve test success rate",
    "Add missing test cases for uncovered functionality",
    "Consider using automated code formatting tools",
    "Focus on removing the most common descriptive adjectives first.",
    "Excellent! naming_conventions quality gate passed with 100.00",
    "Increase timeout or optimize tool execution",
    "Found 40 files with descriptive adjectives.",
    "Use dependency injection to reduce coupling",
    "Consider applying the Single Responsibility Principle"
  ],
  "timestamp": "2025-10-31T13:32:06.248291"
}